# Bootstrap configuration.

# Copyright (C) 2006-2024 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

source_base=gnu
gnulib_name=libgnu

test -d m4 || mkdir m4
test -d $source_base || mkdir -p $source_base

# We don't need these modules, even though gnulib-tool mistakenly
# includes them because of gettext dependencies.
avoided_gnulib_modules='
	--avoid=lock
	--avoid=size_max
'

# Additional xgettext options to use.  Use "\\\newline" to break lines.
XGETTEXT_OPTIONS=$XGETTEXT_OPTIONS'\\\
 --flag=_:1:pass-c-format\\\
 --flag=N_:1:pass-c-format\\\
 --flag=error:3:c-format --flag=error_at_line:5:c-format\\\
 --flag=asnprintf:3:c-format --flag=vasnprintf:3:c-format\\\
 --flag=argp_error:2:c-format\\\
 --flag=__argp_error:2:c-format\\\
 --flag=argp_failure:4:c-format\\\
 --flag=__argp_failure:4:c-format\\\
 --flag=argp_fmtstream_printf:2:c-format\\\
 --flag=__argp_fmtstream_printf:2:c-format\\\
'

# Gettext supplies these files, but we don't need them since
# we don't have an intl subdirectory.
excluded_files='
    m4/glibc2.m4
    m4/intdiv0.m4
    m4/lcmessage.m4
    m4/lock.m4
    m4/uintmax_t.m4
    m4/ulonglong.m4
    m4/visibility.m4
'

# Read local configuration file
if [ -r .bootstrap ]; then
  echo "$0: Reading configuration file .bootstrap"
  eval set -- "`sed 's/#.*$//;/^$/d' .bootstrap | tr '\n' ' '` $*"
fi

test -f Changelog || cat > ChangeLog <<EOT
This file is a placeholder. It will be replaced with the actual ChangeLog
by make dist.  Run make ChangeLog if you wish to create it earlier.
EOT

git submodule init
git submodule update
PAXUTILS=paxutils

# gnulib modules used by this package.
gnulib_modules="$avoided_gnulib_modules
`grep -h '^[^#]' gnulib.modules $PAXUTILS/gnulib.modules`
"

# copy_files srcdir dstdir
copy_files() {
  for file in `cat $1/DISTFILES`
  do
    case $file in
    "#*")  continue;;
    esac
    dst=`echo $file | sed 's^.*/^^'`
    if [ $# -eq 3 ]; then
      case $dst in
      ${3}*) ;;
      *) dst=${3}$dst;;
      esac
    fi
    if [ "$2" = '.' ]; then
      ln -sf $1/$file $2
    else
      symlink_to_dir "$1" "$file" "$2/$dst" || exit
    fi
# FIXME    ignorefile $2 $dst
  done
}

# Import from paxutils
copy_files ${PAXUTILS} .
copy_files ${PAXUTILS}/am m4

echo "$0: Creating m4/paxutils.m4"
(echo "# This file is generated automatically. Please, do not edit."
 echo "#"
 echo "AC_DEFUN([${package}_PAXUTILS],["
 cat ${PAXUTILS}/am/DISTFILES | sed '/^#/d;s/\(.*\)\.m4/pu_\1/' | tr a-z A-Z
 echo "])") > ./m4/paxutils.m4
#FIXME ignorefile m4 paxutils.m4

if [ -d rmt ]; then
   :
else
   mkdir rmt
fi

for dir in doc rmt lib tests
do
        copy_files ${PAXUTILS}/$dir $dir
done

copy_files ${PAXUTILS}/paxlib lib pax

echo "$0: Creating lib/sysdep.c"
m4 -DMODE=C sysdep.m4 mingw.m4 > lib/sysdep.c
echo "$0: Creating lib/sysdep.h"
m4 -DMODE=H sysdep.m4 mingw.m4 > lib/sysdep.h
echo "$0: Updating lib/system.h"
mv lib/system.h lib/system.h~
cat lib/system.h~ > lib/system.h
echo '#include "sysdep.h"' >> lib/system.h
echo "$0: Creating am/sysdep.m4"
m4 -DMODE=AC sysdep.m4 mingw.m4 > am/sysdep.m4
